//  <auto-generated/> 
using Rido.MqttCore;
using Rido.MqttCore.PnP;
using Rido.Mqtt.Client;
using Rido.Mqtt.Client.TopicBindings;

namespace dtmi_rido_pnp_memmon.mqtt;

public class memmon : PnPClient, Imemmon
{
    public IReadOnlyProperty<DateTime> Property_started { get; set; }
    public IWritableProperty<bool> Property_enabled { get; set; }
    public IWritableProperty<int> Property_interval { get; set; }
    public ITelemetry<double> Telemetry_workingSet { get; set; }
    public ICommand<Cmd_getRuntimeStats_Request, Cmd_getRuntimeStats_Response> Command_getRuntimeStats { get; set; }

    public string InitialState => String.Empty;

    internal memmon(IMqttConnection c) : base(c)
    {
        Property_started = new ReadOnlyProperty<DateTime>(c, "started");
        Property_interval = new WritableProperty<int>(c, "interval");
        Property_enabled = new WritableProperty<bool>(c, "enabled");
        Telemetry_workingSet = new Telemetry<double>(c, "workingSet");
        Command_getRuntimeStats = new Command<Cmd_getRuntimeStats_Request, Cmd_getRuntimeStats_Response>(c, "getRuntimeStats");
    }
}